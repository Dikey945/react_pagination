{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","itemsOnPage","currentPage","totalPages","onPageChange","isPrevPage","isNextPage","length","className","classNames","disabled","id","href","onClick","map","pageNum","active","uuidv4","item","getNumbers","from","to","numbers","n","push","items","App","useState","perPage","setPerPage","setCurrentPage","Math","ceil","filter","value","onChange","event","preventDefault","target","htmlFor","currentTarget","prevPage","Number","innerText","ReactDOM","render","document","getElementById"],"mappings":"0NAWaA,EAAuC,SAAC,GAK9C,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAGMC,EAA6B,IAAhBH,EACbI,EAAaJ,IAAgBC,EAAWI,OAE9C,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YAAa,CACXC,SAAUL,IAHhB,SAOE,mBACE,UAAQ,WACRM,GAAG,WACHH,UAAU,YACVI,KAAK,QACL,gBAAeP,EACfQ,QAAST,EANX,oBAYDD,EAAWW,KAAI,SAACC,GAAD,OACd,oBACEP,UAAWC,IACT,YACA,CAAEO,OAAQD,IAAYb,IAH1B,SAOE,mBACE,UAAQ,WACRM,UAAWC,IACT,YACA,CAAE,YAAaM,IAAYb,IAE7BU,KAAI,WAAMG,GACVF,QAAST,EAPX,SASGW,KAXEE,kBAgBT,oBACET,UAAWC,IACT,YAAa,CACXC,SAAUJ,IAHhB,SAOE,mBACE,UAAQ,WACRK,GAAG,WACHH,UAAU,YACVI,KAAK,QACL,gBAAeV,IAAgBC,EAAWI,OAC1CM,QAAST,EANX,uBAYJ,6BACGH,EAAYa,KAAI,SAAAI,GAAI,OACnB,oBACE,UAAQ,OADV,wBAIWA,IAFJD,wBCxFV,SAASE,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECFT,IAAMG,EAAkBN,EAAW,EAAG,IAEzBO,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB4B,EAApB,KACM3B,EAAagB,EAAW,EAAGY,KAAKC,KAHxB,GAGqCJ,IAO7C3B,EAAcwB,EAAMQ,QAAO,SAACf,GAAD,OAC/BA,EAAOhB,EAAc0B,EAAUA,GAC5BV,GAAQhB,EAAc0B,KAa3B,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQN,EAAR,mBAA8BD,EAAY,GAA1C,iBACIA,EAAYA,EAAYM,OAAS,GADrC,eA9BO,GA8BP,OAIH,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRG,GAAG,kBACHH,UAAU,eACV0B,MAAON,EACPO,SArCO,SAACC,GAChBA,EAAMC,iBACNR,GAAYO,EAAME,OAAOJ,OACzBJ,EAAe,IA6BT,UAOE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,YAAaA,EACbC,YAAaA,EACbC,WAAYA,EACZC,aA5Ce,SAACgC,GACW,aAA3BA,EAAMI,cAAc7B,GACtBmB,GAAe,SAACW,GAAD,OAAcA,EAAW,KACJ,aAA3BL,EAAMI,cAAc7B,GAC7BmB,EAAe5B,EAAc,GAE7B4B,EAAeY,OAAON,EAAMI,cAAcG,mBC1BhDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.84c4aa62.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\n\ntype Props = {\n  itemsOnPage: number[]\n  currentPage: number;\n  totalPages: number[];\n  onPageChange: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nexport const Pagination: FunctionComponent<Props> = ({\n  itemsOnPage,\n  currentPage,\n  totalPages,\n  onPageChange,\n}) => {\n  // const isActivePage = (num: number): boolean => num === currentPage;\n  const isPrevPage = currentPage === 1;\n  const isNextPage = currentPage === totalPages.length;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item', {\n              disabled: isPrevPage,\n            },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            id=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isPrevPage}\n            onClick={onPageChange}\n          >\n            «\n          </a>\n        </li>\n\n        {totalPages.map((pageNum) => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: pageNum === currentPage },\n            )}\n            key={uuidv4()}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className={classNames(\n                'page-link',\n                { 'is-active': pageNum === currentPage },\n              )}\n              href={`#${pageNum}`}\n              onClick={onPageChange}\n            >\n              {pageNum}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item', {\n              disabled: isNextPage,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            id=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages.length}\n            onClick={onPageChange}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnPage.map(item => (\n          <li\n            data-cy=\"item\"\n            key={uuidv4()}\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items: number[] = getNumbers(1, 42);\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = getNumbers(1, Math.ceil(total / perPage));\n  const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const itemsOnPage = items.filter((item) => (\n    item > currentPage * perPage - perPage\n    && item <= currentPage * perPage\n  ));\n\n  const onPageChange = (event: React.MouseEvent<HTMLElement>) => {\n    if (event.currentTarget.id === 'prevLink') {\n      setCurrentPage((prevPage) => prevPage - 1);\n    } else if (event.currentTarget.id === 'nextLink') {\n      setCurrentPage(currentPage + 1);\n    } else {\n      setCurrentPage(Number(event.currentTarget.innerText));\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsOnPage[0]} - `\n        + `${itemsOnPage[itemsOnPage.length - 1]} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={onChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        itemsOnPage={itemsOnPage}\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}